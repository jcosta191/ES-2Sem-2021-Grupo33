Index: ProjetoES/src/main/java/com/iscte/ProjetoES/Leitores/LeitorJava.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.iscte.ProjetoES.Leitores;\r\nimport java.lang.*;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport javax.swing.JFileChooser;\r\nimport javax.swing.filechooser.FileNameExtensionFilter;\r\nimport javax.swing.table.AbstractTableModel;\r\n\r\nimport org.apache.poi.EncryptedDocumentException;\r\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\r\nimport org.apache.poi.ss.usermodel.Sheet;\r\nimport org.apache.poi.ss.usermodel.Workbook;\r\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\r\n\r\nimport com.iscte.ProjetoES.Metodo;\r\nimport com.iscte.ProjetoES.Escritores.EscritorExcel;\r\n\r\npublic class LeitorJava extends AbstractTableModel {\r\n\tprivate static final long serialVersionUID = -4220550076295049347L;\r\n\tprivate static LeitorJava INSTANCIA;\r\n\tprivate Sheet java;\r\n\tprivate int MethodID, NOM_class, LOC_class, WMC_class, LOC_method, CYCLO_method;\r\n\tprivate String Package, Classe, method;\r\n\r\n\tprivate LeitorJava() {\r\n\t}\r\n\r\n\tpublic void abrirJava(){\r\n\t\tWorkbook workbook;\r\n\t\ttry {\r\n\t\t\tworkbook = WorkbookFactory.create(escolherJava());\r\n\t\t\tjava = workbook.getSheetAt(0);\r\n\t\t} catch (NullPointerException | InvalidFormatException | IOException e) {\r\n\t\t\tSystem.out.println(\"Não foi possível abrir o ficheiro!\");\r\n\t\t\tSystem.exit(0);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static LeitorJava getInstance() {\r\n\t\tif (INSTANCIA == null)\r\n\t\t\tINSTANCIA = new LeitorJava();\r\n\t\treturn INSTANCIA;\r\n\t}\r\n\r\n\tpublic static LeitorJava newInstance() {\r\n\t\tINSTANCIA = new LeitorJava();\r\n\t\treturn INSTANCIA;\r\n\t}\r\n\r\n\tpublic File escolherJava(){\r\n\t\tJFileChooser escolherJava = new JFileChooser();\r\n\t\tescolherJava.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\r\n\r\n\t\tescolherJava.showOpenDialog(null);\r\n\t\tFile java = escolherJava.getSelectedFile();\r\n\r\n\t\tFile filesList[] = java.listFiles();\r\n\t\tSystem.out.println(\"List of files and directories in the specified directory:\");\r\n\t\tfor (File file : filesList) {\r\n\t\t\tif (file.getName().endsWith(\".java\")) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t/*Class cls = Class.forName(Classe);\r\n\t\t\t\t\tNOM_class= cls.getDeclaredMethods().length;*/\r\n\t\t\t\t\tint count = 0;\r\n\t\t\t\t\tScanner myReader = new Scanner(file);\r\n\t\t\t\t\twhile (myReader.hasNextLine()) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\tString data = myReader.nextLine();\r\n\t\t\t\t\t\tLOC_class++;\r\n\t\t\t\t\t\tString[] words = data.split(\" \");\r\n\t\t\t\t\t\tClasse = file.getName().replace(\".java\",\"\");\r\n\t\t\t\t\t\tif (count == 1) {\r\n\t\t\t\t\t\t\tif (words[0] == \"package\") {\r\n\t\t\t\t\t\t\t\tPackage = words[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(procurarCYCLO(\"for\",data) || procurarCYCLO(\"if\",data) || procurarCYCLO(\"case\",data) || procurarCYCLO(\"while\",data)) {\r\n\t\t\t\t\t\t\tCYCLO_method++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (data.isBlank()) {\r\n\t\t\t\t\t\t\tLOC_class--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tMetodo met = new Metodo(MethodID, Package, Classe, method, NOM_class, LOC_class, WMC_class,\r\n\t\t\t\t\t\t\t\tLOC_method, CYCLO_method);\r\n\t\t\t\t\t\tEscritorExcel.adicionaLista(met);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmyReader.close();\r\n\t\t\t\t} catch (FileNotFoundException e) {\r\n\t\t\t\t\tSystem.out.println(\"An error occurred.\");\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * System.out.println(\"File name: \"+file.getName());\r\n\t\t\t\t * System.out.println(\"File path: \"+file.getAbsolutePath());\r\n\t\t\t\t * System.out.println(\"Size :\"+file.getTotalSpace()); System.out.println(\" \");\r\n\t\t\t\t */\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn java;\r\n\r\n\t}\r\n\t\r\n\tpublic boolean procurarCYCLO(String a, String b) {\r\n\t\tPattern p = Pattern.compile(a);\r\n\t    Matcher m = p.matcher(b);\r\n\t    if(m.find()) {\r\n\t    \treturn true;\r\n\t    }\r\n\t    return false;\r\n\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic int getRowCount() {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic int getColumnCount() {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Object getValueAt(int rowIndex, int columnIndex) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\treturn null;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ProjetoES/src/main/java/com/iscte/ProjetoES/Leitores/LeitorJava.java b/ProjetoES/src/main/java/com/iscte/ProjetoES/Leitores/LeitorJava.java
--- a/ProjetoES/src/main/java/com/iscte/ProjetoES/Leitores/LeitorJava.java	(revision cb9ab3b993b6dde9a23c6d75fc07d3eb1baeadc1)
+++ b/ProjetoES/src/main/java/com/iscte/ProjetoES/Leitores/LeitorJava.java	(date 1618855974434)
@@ -89,7 +89,7 @@
 						
 						
 						
-						if (data.isBlank()) {
+						if (data.isEmpty()){
 							LOC_class--;
 						}
 						Metodo met = new Metodo(MethodID, Package, Classe, method, NOM_class, LOC_class, WMC_class,
